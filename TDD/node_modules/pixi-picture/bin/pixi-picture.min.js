/*!
 * pixi-picture - v1.0.3
 * Compiled Wed Oct 12 2016 22:33:19 GMT+0300 (RTZ 2 (зима))
 *
 * pixi-picture is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var r;r="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,(r.pixiPicture||(r.pixiPicture={})).min=e()}}(function(){return function e(r,t,n){function o(a,u){if(!t[a]){if(!r[a]){var s="function"==typeof require&&require;if(!u&&s)return s(a,!0);if(i)return i(a,!0);var d=new Error("Cannot find module '"+a+"'");throw d.code="MODULE_NOT_FOUND",d}var c=t[a]={exports:{}};r[a][0].call(c.exports,function(e){var t=r[a][1][e];return o(t?t:e)},c,c.exports,e,r,t,n)}return t[a].exports}for(var i="function"==typeof require&&require,a=0;a<n.length;a++)o(n[a]);return o}({1:[function(e,r,t){function n(e,r){o.call(this,e,"#define GLSLIFY 1\nattribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec4 aColor;\n\nuniform mat3 projectionMatrix;\nuniform mat3 mapMatrix;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vMapCoord;\n%SPRITE_UNIFORMS%\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    %SPRITE_CODE%\n    vMapCoord = (mapMatrix * vec3(aVertexPosition, 1.0)).xy;\n}\n","#define GLSLIFY 1\nvarying vec2 vTextureCoord;\nvarying vec2 vMapCoord;\nvarying vec4 vColor;\n\nuniform sampler2D uSampler[2];\nuniform vec4 uColor;\n%SPRITE_UNIFORMS%\n\nvoid main(void)\n{\n    %SPRITE_CODE%\n    vec4 source = texture2D(uSampler[0], textureCoord) * uColor;\n    vec4 target = texture2D(uSampler[1], vMapCoord);\n\n    //reverse hardlight\n    if (source.a == 0.0) {\n        gl_FragColor = vec4(0, 0, 0, 0);\n        return;\n    }\n    //yeah, premultiplied\n    vec3 Cb = source.rgb/source.a, Cs;\n    if (target.a > 0.0) {\n        Cs = target.rgb / target.a;\n    }\n    vec3 multiply = Cb * Cs * 2.0;\n    vec3 Cs2 = Cs * 2.0 - 1.0;\n    vec3 screen = Cb + Cs2 - Cb * Cs2;\n    vec3 B;\n    if (Cb.r <= 0.5) {\n        B.r = multiply.r;\n    } else {\n        B.r = screen.r;\n    }\n    if (Cb.g <= 0.5) {\n        B.g = multiply.g;\n    } else {\n        B.g = screen.g;\n    }\n    if (Cb.b <= 0.5) {\n        B.b = multiply.b;\n    } else {\n        B.b = screen.b;\n    }\n    vec4 res;\n    res.xyz = (1.0 - source.a) * Cs + source.a * B;\n    res.a = source.a + target.a * (1.0-source.a);\n    gl_FragColor = vec4(res.xyz * res.a, res.a);\n}\n",r),this.bind(),this.uniforms.uSampler=[0,1]}var o=e("./PictureShader");n.prototype=Object.create(o.prototype),n.prototype.constructor=n,r.exports=n},{"./PictureShader":5}],2:[function(e,r,t){function n(e,r){o.call(this,e,"#define GLSLIFY 1\nattribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec4 aColor;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n%SPRITE_UNIFORMS%\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    %SPRITE_CODE%\n}\n","#define GLSLIFY 1\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\n\nuniform sampler2D uSampler;\nuniform vec4 uColor;\n%SPRITE_UNIFORMS%\n\nvoid main(void)\n{\n    %SPRITE_CODE%\n\n    vec4 sample = texture2D(uSampler, textureCoord);\n    gl_FragColor = sample * uColor;\n}\n",r),this.bind(),this.uniforms.uColor=new Float32Array(1,1,1,1)}var o=e("./PictureShader");n.prototype=Object.create(o.prototype),n.prototype.constructor=n,r.exports=n},{"./PictureShader":5}],3:[function(e,r,t){function n(e,r){o.call(this,e,"#define GLSLIFY 1\nattribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec4 aColor;\n\nuniform mat3 projectionMatrix;\nuniform mat3 mapMatrix;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vMapCoord;\n%SPRITE_UNIFORMS%\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    %SPRITE_CODE%\n    vMapCoord = (mapMatrix * vec3(aVertexPosition, 1.0)).xy;\n}\n","#define GLSLIFY 1\nvarying vec2 vTextureCoord;\nvarying vec2 vMapCoord;\nvarying vec4 vColor;\n\nuniform sampler2D uSampler[2];\nuniform vec4 uColor;\n%SPRITE_UNIFORMS%\n\nvoid main(void)\n{\n    %SPRITE_CODE%\n    vec4 source = texture2D(uSampler[0], textureCoord) * uColor;\n    vec4 target = texture2D(uSampler[1], vMapCoord);\n\n    //reverse hardlight\n    if (source.a == 0.0) {\n        gl_FragColor = vec4(0, 0, 0, 0);\n        return;\n    }\n    //yeah, premultiplied\n    vec3 Cb = source.rgb/source.a, Cs;\n    if (target.a > 0.0) {\n        Cs = target.rgb / target.a;\n    }\n    vec3 multiply = Cb * Cs * 2.0;\n    vec3 Cb2 = Cb * 2.0 - 1.0;\n    vec3 screen = Cb2 + Cs - Cb2 * Cs;\n    vec3 B;\n    if (Cs.r <= 0.5) {\n        B.r = multiply.r;\n    } else {\n        B.r = screen.r;\n    }\n    if (Cs.g <= 0.5) {\n        B.g = multiply.g;\n    } else {\n        B.g = screen.g;\n    }\n    if (Cs.b <= 0.5) {\n        B.b = multiply.b;\n    } else {\n        B.b = screen.b;\n    }\n    vec4 res;\n    res.xyz = (1.0 - source.a) * Cs + source.a * B;\n    res.a = source.a + target.a * (1.0-source.a);\n    gl_FragColor = vec4(res.xyz * res.a, res.a);\n}\n",r),this.bind(),this.uniforms.uSampler=[0,1]}var o=e("./PictureShader");n.prototype=Object.create(o.prototype),n.prototype.constructor=n,r.exports=n},{"./PictureShader":5}],4:[function(e,r,t){function n(e){PIXI.ObjectRenderer.call(this,e)}function o(e){return e+=0===e,--e,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,e|=e>>>16,e+1}var i=e("./NormalShader"),a=e("./mapFilterBlendModesToPixi"),u=(PIXI.glCore,PIXI.WRAP_MODES);n.prototype=Object.create(PIXI.ObjectRenderer.prototype),n.prototype.constructor=n,n.prototype.onContextChange=function(){var e=this.renderer.gl;this.quad=new PIXI.Quad(e),this.drawModes=a(e),this.normalShader=[new i(e,0),new i(e,1),new i(e,2)],this.quad.initVao(this.normalShader[0]),this._tempClamp=new Float32Array(4),this._tempColor=new Float32Array(4),this._tempRect=new PIXI.Rectangle,this._tempRect2=new PIXI.Rectangle,this._tempRect3=new PIXI.Rectangle,this._tempMatrix=new PIXI.Matrix,this._tempMatrix2=new PIXI.Matrix,this._bigBuf=new Uint8Array(1<<20),this._renderTexture=new PIXI.BaseRenderTexture(1024,1024)},n.prototype.start=function(){},n.prototype.flush=function(){},n.prototype._getRenderTexture=function(e,r){return(this._renderTexture.width<e||this._renderTexture.height<r)&&(r=o(e),r=o(r),this._renderTexture.resize(e,r)),this._renderTexture},n.prototype._getBuf=function(e){var r=this._bigBuf;return r.length<e&&(e=o(e),r=new Uint8Array(e),this._bigBuf=r),r},n.prototype.render=function(e){if(e.texture.valid){var r=0;e.tileTransform&&(r=this._isSimpleSprite(e)?1:2);var t=this.drawModes[e.blendMode];t?this._renderBlend(e,t[r]):this._renderNormal(e,this.normalShader[r])}},n.prototype._renderNormal=function(e,r){var t=this.renderer;t.bindShader(r),t.state.setBlendMode(e.blendMode),this._renderInner(e,r)},n.prototype._renderBlend=function(e,r){var t=this.renderer,n=e.getBounds(),o=t._activeRenderTarget,i=o.projectionMatrix,a=i.a<0,u=i.d<0,s=o.resolution,d=this._tempRect,c=o.sourceFrame||o.destinationFrame;d.x=0,d.y=0,d.width=c.width,d.height=c.height;var p=this._tempRect2,h=c.width*s,l=c.height*s;p.x=(n.x+i.tx/i.a)*s+h/2,p.y=(n.y+i.ty/i.d)*s+l/2,p.width=n.width*s,p.height=n.height*s,a&&(p.y=h-p.width-p.x),u&&(p.y=l-p.height-p.y);var v=(this._tempRect3,Math.floor(Math.max(d.x,p.x))),m=Math.ceil(Math.min(d.x+d.width,p.x+p.width)),f=Math.floor(Math.max(d.y,p.y)),x=Math.ceil(Math.min(d.y+d.height,p.y+p.height)),g=m-v,C=x-f;if(!(g<=0||C<=0)){var y=this._getRenderTexture(g,C);t.bindTexture(y,1);var _=t.gl;if(t.renderingToScreen&&o.root){this._getBuf(g*C*4);_.readPixels(v,f,g,C,_.RGBA,_.UNSIGNED_BYTE,this._bigBuf),_.texSubImage2D(_.TEXTURE_2D,0,0,0,g,C,_.RGBA,_.UNSIGNED_BYTE,this._bigBuf)}else _.copyTexSubImage2D(_.TEXTURE_2D,0,0,0,v,f,g,C);if(t.bindShader(r),t.state.setBlendMode(PIXI.BLEND_MODES.NORMAL),r.uniforms.mapMatrix){var T=this._tempMatrix;T.a=p.width/y.width/n.width,a?(T.a=-T.a,T.tx=(p.x-v)/y.width-(n.x+n.width)*T.a):T.tx=(p.x-v)/y.width-n.x*T.a,T.d=p.height/y.height/n.height,u?(T.d=-T.d,T.ty=(p.y-f)/y.height-(n.y+n.height)*T.d):T.ty=(p.y-f)/y.height-n.y*T.d,r.uniforms.mapMatrix=T.toArray(!0)}this._renderInner(e,r)}},n.prototype._renderInner=function(e,r){this.renderer;r.tilingMode>0?this._renderWithShader(e,1===r.tilingMode,r):this._renderSprite(e,r)},n.prototype._renderSprite=function(e,r){for(var t=this.renderer,n=this.quad,o=e.texture._uvs,i=(n.vertices,e.computedGeometry?e.computedGeometry.vertices:e.vertexData),a=0;a<8;a++)n.vertices[a]=i[a];n.uvs[0]=o.x0,n.uvs[1]=o.y0,n.uvs[2]=o.x1,n.uvs[3]=o.y1,n.uvs[4]=o.x2,n.uvs[5]=o.y2,n.uvs[6]=o.x3,n.uvs[7]=o.y3,n.upload();var u=e.texture.frame,s=e.texture.baseTexture,d=this._tempClamp,c=.5/s.resolution;d[0]=(u.x+c)/s.width,d[1]=(u.y+c)/s.height,d[2]=(u.x+u.width-c)/s.width,d[3]=(u.y+u.height-c)/s.height,r.uniforms.uTextureClamp=d;var p=this._tempColor;PIXI.utils.hex2rgb(e.tint,p);var h=e.worldAlpha;p[0]*=h,p[1]*=h,p[2]*=h,p[3]=h,r.uniforms.uColor=p,t.bindTexture(s,0),n.draw()},n.prototype._isSimpleSprite=function(e){var r=this.renderer,t=e._texture,n=t.baseTexture,o=n.isPowerOfTwo&&t.frame.width===n.width&&t.frame.height===n.height;return o&&(n._glTextures[r.CONTEXT_UID]?o=n.wrapMode!==u.CLAMP:n.wrapMode===u.CLAMP&&(n.wrapMode=u.REPEAT)),o},n.prototype._renderWithShader=function(e,r,t){var n=this.quad,o=n.vertices,i=e._width*(1-e._anchor._x),a=e._width*-e._anchor._x,u=e._height*(1-e._anchor._y),s=e._height*-e._anchor._y,d=e.transform.worldTransform,c=d.a,p=d.b,h=d.c,l=d.d,v=d.tx,m=d.ty;o[0]=c*a+h*s+v,o[1]=l*s+p*a+m,o[2]=c*i+h*s+v,o[3]=l*s+p*i+m,o[4]=c*i+h*u+v,o[5]=l*u+p*i+m,o[6]=c*a+h*u+v,o[7]=l*u+p*a+m,o=n.uvs,o[0]=o[6]=-e.anchor.x,o[1]=o[3]=-e.anchor.y,o[2]=o[4]=1-e.anchor.x,o[5]=o[7]=1-e.anchor.y,n.upload();var f=this.renderer,x=e._texture,g=e.tileTransform.localTransform,C=e.uvTransform,y=x.width,_=x.height,T=e._width,S=e._height,I=this._tempMatrix2;I.set(g.a*y/T,g.b*y/S,g.c*_/T,g.d*_/S,g.tx/T,g.ty/S),I.invert(),r?I.append(C.mapCoord):(t.uniforms.uMapCoord=C.mapCoord.toArray(!0),t.uniforms.uClampFrame=C.uClampFrame,t.uniforms.uClampOffset=C.uClampOffset),t.uniforms.uTransform=I.toArray(!0);var b=this._tempColor,P=e.worldAlpha;PIXI.utils.hex2rgb(e.tint,b),b[0]*=P,b[1]*=P,b[2]*=P,b[3]=P,t.uniforms.uColor=b,f.bindTexture(x),n.draw()},PIXI.WebGLRenderer.registerPlugin("picture",n),r.exports=n},{"./NormalShader":2,"./mapFilterBlendModesToPixi":8}],5:[function(e,r,t){function n(e,r,t,n){var i=o[n];PIXI.Shader.call(this,e,r.replace(/%SPRITE_UNIFORMS%/gi,i.vertUniforms).replace(/%SPRITE_CODE%/gi,i.vertCode),t.replace(/%SPRITE_UNIFORMS%/gi,i.fragUniforms).replace(/%SPRITE_CODE%/gi,i.fragCode)),this.tilingMode=n}var o=[{vertUniforms:"",vertCode:"vTextureCoord = aTextureCoord;",fragUniforms:"uniform vec4 uTextureClamp;",fragCode:"vec2 textureCoord = clamp(vTextureCoord, uTextureClamp.xy, uTextureClamp.zw);"},{vertUniforms:"uniform mat3 uTransform;",vertCode:"vTextureCoord = (uTransform * vec3(aTextureCoord, 1.0)).xy;",fragUniforms:"",fragCode:"vec2 textureCoord = vTextureCoord;"},{vertUniforms:"uniform mat3 uTransform;",vertCode:"vTextureCoord = (uTransform * vec3(aTextureCoord, 1.0)).xy;",fragUniforms:"uniform mat3 uMapCoord;\nuniform vec4 uClampFrame;\nuniform vec2 uClampOffset;",fragCode:"vec2 textureCoord = mod(vTextureCoord - uClampOffset, vec2(1.0, 1.0)) + uClampOffset;\ntextureCoord = (uMapCoord * vec3(textureCoord, 1.0)).xy;\ntextureCoord = clamp(textureCoord, uClampFrame.xy, uClampFrame.zw);"}];n.prototype=Object.create(PIXI.Shader.prototype),n.prototype.constructor=n,r.exports=n},{}],6:[function(e,r,t){function n(e){PIXI.Sprite.call(this,e)}n.prototype=Object.create(PIXI.Sprite.prototype),n.prototype.constructor=n,r.exports=n,n.prototype._renderWebGL=function(e){this.updateGeometry?this.updateGeometry():this.calculateVertices(),e.setObjectRenderer(e.plugins.picture),e.plugins.picture.render(this)}},{}],7:[function(e,r,t){function n(e,r,t){PIXI.extras.TilingSprite.call(this,e,r,t)}n.prototype=Object.create(PIXI.extras.TilingSprite.prototype),n.prototype.constructor=n,r.exports=n,n.prototype._renderWebGL=function(e){this.updateGeometry&&this.updateGeometry();const r=this._texture;r&&r.valid&&(this.tileTransform.updateLocalTransform(),this.uvTransform.update(),e.setObjectRenderer(e.plugins.picture),e.plugins.picture.render(this))}},{}],8:[function(e,r,t){function n(e,r){return r=r||[],r[o.BLEND_MODES.OVERLAY]=[new i(e,0),new i(e,1),new i(e,2)],r[o.BLEND_MODES.HARD_LIGHT]=[new a(e,0),new a(e,1),new a(e,2)],r}var o=PIXI,i=e("./OverlayShader"),a=e("./HardLightShader");r.exports=n},{"./HardLightShader":1,"./OverlayShader":3}],9:[function(e,r,t){var n={PictureSprite:e("./PictureSprite"),PictureTilingSprite:e("./PictureTilingSprite"),PictureRenderer:e("./PictureRenderer")};Object.assign(PIXI.extras,n),r.exports=n},{"./PictureRenderer":4,"./PictureSprite":6,"./PictureTilingSprite":7}]},{},[9])(9)});
//# sourceMappingURL=pixi-picture.min.js.map
